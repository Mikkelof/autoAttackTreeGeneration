CWE-ID,Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Exploitation Factors,Likelihood of Exploit,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Related Attack Patterns,Notes
1336,Improper Neutralization of Special Elements Used in a Template Engine,Base,Incomplete,"The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.","Many web applications use template engines that allow developers to insert externally-influenced values into free text or messages in order to generate a full web page, document, message, etc. Such engines include Twig, Jinja2, Pug, Java Server Pages, FreeMarker, Velocity, ColdFusion, Smarty, and many others - including PHP itself. Some CMS (Content Management Systems) also use templates. Template engines often have their own custom command or expression language. If an attacker can influence input into a template before it is processed, then the attacker can invoke arbitrary expressions, i.e. perform injection attacks. For example, in some template languages, an attacker could inject the expression {{7*7}} and determine if the output returns 49 instead. The syntax varies depending on the language. In some cases, XSS-style attacks can work, which can obscure the root cause if the developer does not closely investigate the root cause of the error. Template engines can be used on the server or client, so both sides could be affected by injection. The mechanisms of attack or the affected technologies might be different, but the mistake is fundamentally the same.",::NATURE:ChildOf:CWE ID:94:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:Java:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:PHP:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:Python:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:JavaScript:LANGUAGE PREVALENCE:Undetermined::LANGUAGE CLASS:Interpreted:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:Not OS-Specific:OPERATING SYSTEM PREVALENCE:Undetermined::TECHNOLOGY NAME:AI/ML:TECHNOLOGY PREVALENCE:Undetermined::TECHNOLOGY CLASS:Client Server:TECHNOLOGY PREVALENCE:Undetermined::,,::TERM:Server-Side Template Injection / SSTI:DESCRIPTION:This term is used for injection into template engines being used by a server.::TERM:Client-Side Template Injection / CSTI:DESCRIPTION:This term is used for injection into template engines being used by a client.::,::PHASE:Architecture and Design:NOTE:The developer might choose a template engine that makes it easier for programmers to write vulnerable code.::PHASE:Implementation:NOTE:The programmer might not use engine's built-in sandboxes or other capabilities to escape or otherwise prevent template injection from untrusted input.::,,,::SCOPE:Integrity:IMPACT:Execute Unauthorized Code or Commands::,,"::PHASE:Architecture and Design:DESCRIPTION:Choose a template engine that offers a sandbox or restricted mode, or at least limits the power of any available expressions, function calls, or commands.::PHASE:Implementation:DESCRIPTION:Use the template engine's sandbox or restricted mode, if available.::","::REFERENCE:CVE-2024-34359:DESCRIPTION:Chain: Python bindings for LLM library do not use a sandboxed environment when parsing a template and constructing a prompt, allowing jinja2 Server Side Template Injection and code execution - one variant of a prompt injection attack.:LINK:https://www.cve.org/CVERecord?id=CVE-2024-34359::REFERENCE:CVE-2017-16783:DESCRIPTION:server-side template injection in content management server:LINK:https://www.cve.org/CVERecord?id=CVE-2017-16783::REFERENCE:CVE-2020-9437:DESCRIPTION:authentication / identity management product has client-side template injection:LINK:https://www.cve.org/CVERecord?id=CVE-2020-9437::REFERENCE:CVE-2020-12790:DESCRIPTION:Server-Side Template Injection using a Twig template:LINK:https://www.cve.org/CVERecord?id=CVE-2020-12790::REFERENCE:CVE-2021-21244:DESCRIPTION:devops platform allows SSTI:LINK:https://www.cve.org/CVERecord?id=CVE-2021-21244::REFERENCE:CVE-2020-4027:DESCRIPTION:bypass of Server-Side Template Injection protection mechanism with macros in Velocity templates:LINK:https://www.cve.org/CVERecord?id=CVE-2020-4027::REFERENCE:CVE-2020-26282:DESCRIPTION:web browser proxy server allows Java EL expressions from Server-Side Template Injection:LINK:https://www.cve.org/CVERecord?id=CVE-2020-26282::REFERENCE:CVE-2020-1961:DESCRIPTION:SSTI involving mail templates and JEXL expressions:LINK:https://www.cve.org/CVERecord?id=CVE-2020-1961::REFERENCE:CVE-2019-19999:DESCRIPTION:product does not use a safe setting for a FreeMarker configuration, allowing SSTI:LINK:https://www.cve.org/CVERecord?id=CVE-2019-19999::REFERENCE:CVE-2018-20465:DESCRIPTION:product allows read of sensitive database username/password variables using server-side template injection:LINK:https://www.cve.org/CVERecord?id=CVE-2018-20465::",,,,,"::TYPE:Relationship:NOTE:Since expression languages are often used in templating languages, there may be some overlap with CWE-917 (Expression Language Injection). XSS (CWE-79) is also co-located with template injection.::TYPE:Maintenance:NOTE:The interrelationships and differences between CWE-917 and CWE-1336 need to be further clarified.::",
