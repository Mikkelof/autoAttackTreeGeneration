CWE-ID,Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Exploitation Factors,Likelihood of Exploit,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Related Attack Patterns,Notes
1419,Incorrect Initialization of Resource,Class,Incomplete,"The product attempts to initialize a resource but does not correctly do so, which might leave the resource in an unexpected, incorrect, or insecure state when it is accessed.","This can have security implications when the associated resource is expected to have certain properties or values. Examples include a variable that determines whether a user has been authenticated or not, or a register or fuse value that determines the security state of the product. For software, this weakness can frequently occur when implicit initialization is used, meaning the resource is not explicitly set to a specific value. For example, in C, memory is not necessarily cleared when it is allocated on the stack, and many scripting languages use a default empty, null value, or zero value when a variable is not explicitly initialized. For hardware, this weakness frequently appears with reset values and fuses. After a product reset, hardware may initialize registers incorrectly. During different phases of a product lifecycle, fuses may be set to incorrect values. Even if fuses are set to correct values, the lines to the fuse could be broken or there might be hardware on the fuse line that alters the fuse value to be incorrect.",::NATURE:ChildOf:CWE ID:665:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::OPERATING SYSTEM CLASS:Not OS-Specific:OPERATING SYSTEM PREVALENCE:Undetermined::ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined::TECHNOLOGY CLASS:Not Technology-Specific:TECHNOLOGY PREVALENCE:Undetermined::,,,::PHASE:Implementation::PHASE:Manufacturing::PHASE:Installation::PHASE:System Configuration::PHASE:Operation::,,,"::SCOPE:Confidentiality:IMPACT:Read Memory:IMPACT:Read Application Data:IMPACT:Unexpected State:LIKELIHOOD:Unknown::SCOPE:Authorization:SCOPE:Integrity:IMPACT:Gain Privileges or Assume Identity::SCOPE:Other:IMPACT:Varies by Context:NOTE:The technical impact can vary widely based on how the resource is used in the product, and whether its contents affect security decisions.::",,"::PHASE:Implementation:DESCRIPTION:Choose the safest-possible initialization for security-related resources.::PHASE:Implementation:DESCRIPTION:Ensure that each resource (whether variable, memory buffer, register, etc.) is fully initialized.::PHASE:Implementation:DESCRIPTION:Pay close attention to complex conditionals or reset sources that affect initialization, since some paths might not perform the initialization.::PHASE:Architecture and Design:DESCRIPTION:Ensure that the design and architecture clearly identify what the initialization should be, and that the initialization does not have security implications.::","::REFERENCE:CVE-2020-27211:DESCRIPTION:Chain: microcontroller system-on-chip uses a register value stored in flash to set product protection state on the memory bus and does not contain protection against fault injection (CWE-1319) which leads to an incorrect initialization of the memory bus (CWE-1419) causing the product to be in an unprotected state.:LINK:https://www.cve.org/CVERecord?id=CVE-2020-27211::REFERENCE:CVE-2023-25815:DESCRIPTION:chain: a change in an underlying package causes the gettext function to use implicit initialization with a hard-coded path (CWE-1419) under the user-writable C: drive, introducing an untrusted search path element (CWE-427) that enables spoofing of messages.:LINK:https://www.cve.org/CVERecord?id=CVE-2023-25815::REFERENCE:CVE-2022-43468:DESCRIPTION:WordPress module sets internal variables based on external inputs, allowing false reporting of the number of views:LINK:https://www.cve.org/CVERecord?id=CVE-2022-43468::REFERENCE:CVE-2022-36349:DESCRIPTION:insecure default variable initialization in BIOS firmware for a hardware board allows DoS:LINK:https://www.cve.org/CVERecord?id=CVE-2022-36349::REFERENCE:CVE-2015-7763:DESCRIPTION:distributed filesystem only initializes part of the variable-length padding for a packet, allowing attackers to read sensitive information from previously-sent packets in the same memory location:LINK:https://www.cve.org/CVERecord?id=CVE-2015-7763::",,,,,,
