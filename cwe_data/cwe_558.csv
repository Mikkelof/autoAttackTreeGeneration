CWE-ID,Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Exploitation Factors,Likelihood of Exploit,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Related Attack Patterns,Notes
558,Use of getlogin() in Multithreaded Application,Variant,Draft,"The product uses the getlogin() function in a multithreaded context, potentially causing it to return incorrect values.","The getlogin() function returns a pointer to a string that contains the name of the user associated with the calling process. The function is not reentrant, meaning that if it is called from another process, the contents are not locked out and the value of the string can be changed by another process. This makes it very risky to use because the username can be changed by other processes, so the results of the function cannot be trusted.",::NATURE:ChildOf:CWE ID:663:VIEW ID:1000:ORDINAL:Primary::,,::LANGUAGE NAME:C:LANGUAGE PREVALENCE:Undetermined::LANGUAGE NAME:C++:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Implementation::,,,::SCOPE:Integrity:SCOPE:Access Control:SCOPE:Other:IMPACT:Modify Application Data:IMPACT:Bypass Protection Mechanism:IMPACT:Other::,,"::PHASE:Architecture and Design:DESCRIPTION:Using names for security purposes is not advised. Names are easy to forge and can have overlapping user IDs, potentially causing confusion or impersonation.::PHASE:Implementation:DESCRIPTION:Use getlogin_r() instead, which is reentrant, meaning that other processes are locked out from changing the username.::",,,,::TAXONOMY NAME:7 Pernicious Kingdoms:ENTRY NAME:Often Misused: Authentication::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,,
