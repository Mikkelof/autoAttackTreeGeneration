CWE-ID,Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Exploitation Factors,Likelihood of Exploit,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Related Attack Patterns,Notes
593,Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created,Variant,Draft,The product modifies the SSL context after connection creation has begun.,"If the program modifies the SSL_CTX object after creating SSL objects from it, there is the possibility that older SSL objects created from the original context could all be affected by that change.",::NATURE:ChildOf:CWE ID:666:VIEW ID:1000:ORDINAL:Primary::NATURE:ChildOf:CWE ID:1390:VIEW ID:1000::,,,,,::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::,,,"::SCOPE:Access Control:IMPACT:Bypass Protection Mechanism:NOTE:No authentication takes place in this process, bypassing an assumed protection of encryption.::SCOPE:Confidentiality:IMPACT:Read Application Data:NOTE:The encrypted communication between a user and a trusted host may be subject to a sniffing attack.::",,"::PHASE:Architecture and Design:DESCRIPTION:Use a language or a library that provides a cryptography framework at a higher level of abstraction.::PHASE:Implementation:DESCRIPTION:Most SSL_CTX functions have SSL counterparts that act on SSL-type objects.::PHASE:Implementation:DESCRIPTION:Applications should set up an SSL_CTX completely, before creating SSL objects from it.::",,,,,::94::,,
