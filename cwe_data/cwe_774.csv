CWE-ID,Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Exploitation Factors,Likelihood of Exploit,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Related Attack Patterns,Notes
774,Allocation of File Descriptors or Handles Without Limits or Throttling,Variant,Incomplete,"The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor.","This can cause the product to consume all available file descriptors or handles, which can prevent other processes from performing critical file processing operations.",::NATURE:ChildOf:CWE ID:770:VIEW ID:1000:ORDINAL:Primary::,,,,::TERM:File Descriptor Exhaustion::,::PHASE:Architecture and Design::PHASE:Implementation::,,,"::SCOPE:Availability:IMPACT:DoS: Resource Consumption (Other):NOTE:When allocating resources without limits, an attacker could prevent all other processes from accessing the same type of resource.::",,"::PHASE:Operation Architecture and Design:STRATEGY:Resource Limitation:DESCRIPTION:Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set limits for certain types of resources, and getrlimit() can determine how many resources are available. However, these functions are not available on all operating systems. When the current levels get close to the maximum that is defined for the application (see CWE-770), then limit the allocation of further resources to privileged users; alternately, begin releasing resources for less-privileged users. While this mitigation may protect the system from attack, it will not necessarily stop attackers from adversely impacting other users. Ensure that the application performs the appropriate error checks and error handling in case resources become unavailable (CWE-703).::",,,,::TAXONOMY NAME:Software Fault Patterns:ENTRY ID:SFP13:ENTRY NAME:Unrestricted Consumption::,,,
