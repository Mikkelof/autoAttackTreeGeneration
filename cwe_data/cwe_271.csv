CWE-ID,Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Exploitation Factors,Likelihood of Exploit,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Related Attack Patterns,Notes
271,Privilege Dropping / Lowering Errors,Class,Incomplete,The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.,"In some contexts, a system executing with elevated permissions will hand off a process/file/etc. to another process or user. If the privileges of an entity are not reduced, then elevated privileges are spread throughout a system and possibly to an attacker.",::NATURE:ChildOf:CWE ID:269:VIEW ID:1000:ORDINAL:Primary::,::ORDINALITY:Primary::,::LANGUAGE CLASS:Not Language-Specific:LANGUAGE PREVALENCE:Undetermined::,,,::PHASE:Architecture and Design::PHASE:Implementation:NOTE:REALIZATION: This weakness is caused during implementation of an architectural security tactic.::PHASE:Operation::,,,"::SCOPE:Access Control:IMPACT:Gain Privileges or Assume Identity:NOTE:If privileges are not dropped, neither are access rights of the user. Often these rights can be prevented from being dropped.::SCOPE:Access Control:SCOPE:Non-Repudiation:IMPACT:Gain Privileges or Assume Identity:IMPACT:Hide Activities:NOTE:If privileges are not dropped, in some cases the system may record actions as the user which is being impersonated rather than the impersonator.::",,"::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area. Ensure that appropriate compartmentalization is built into the system design, and the compartmentalization allows for and reinforces privilege separation functionality. Architects and designers should rely on the principle of least privilege to decide the appropriate time to use privileges and the time to drop privileges.::PHASE:Architecture and Design Operation:DESCRIPTION:Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.::PHASE:Architecture and Design:STRATEGY:Separation of Privilege:DESCRIPTION:Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource.::","::REFERENCE:CVE-2000-1213:DESCRIPTION:Program does not drop privileges after acquiring the raw socket.:LINK:https://www.cve.org/CVERecord?id=CVE-2000-1213::REFERENCE:CVE-2001-0559:DESCRIPTION:Setuid program does not drop privileges after a parsing error occurs, then calls another program to handle the error.:LINK:https://www.cve.org/CVERecord?id=CVE-2001-0559::REFERENCE:CVE-2001-0787:DESCRIPTION:Does not drop privileges in related groups when lowering privileges.:LINK:https://www.cve.org/CVERecord?id=CVE-2001-0787::REFERENCE:CVE-2002-0080:DESCRIPTION:Does not drop privileges in related groups when lowering privileges.:LINK:https://www.cve.org/CVERecord?id=CVE-2002-0080::REFERENCE:CVE-2001-1029:DESCRIPTION:Does not drop privileges before determining access to certain files.:LINK:https://www.cve.org/CVERecord?id=CVE-2001-1029::REFERENCE:CVE-1999-0813:DESCRIPTION:Finger daemon does not drop privileges when executing programs on behalf of the user being fingered.:LINK:https://www.cve.org/CVERecord?id=CVE-1999-0813::REFERENCE:CVE-1999-1326:DESCRIPTION:FTP server does not drop privileges if a connection is aborted during file transfer.:LINK:https://www.cve.org/CVERecord?id=CVE-1999-1326::REFERENCE:CVE-2000-0172:DESCRIPTION:Program only uses seteuid to drop privileges.:LINK:https://www.cve.org/CVERecord?id=CVE-2000-0172::REFERENCE:CVE-2004-2504:DESCRIPTION:Windows program running as SYSTEM does not drop privileges before executing other programs (many others like this, especially involving the Help facility).:LINK:https://www.cve.org/CVERecord?id=CVE-2004-2504::REFERENCE:CVE-2004-0213:DESCRIPTION:Utility Manager launches winhlp32.exe while running with raised privileges, which allows local users to gain system privileges.:LINK:https://www.cve.org/CVERecord?id=CVE-2004-0213::REFERENCE:CVE-2004-0806:DESCRIPTION:Setuid program does not drop privileges before executing program specified in an environment variable.:LINK:https://www.cve.org/CVERecord?id=CVE-2004-0806::REFERENCE:CVE-2004-0828:DESCRIPTION:Setuid program does not drop privileges before processing file specified on command line.:LINK:https://www.cve.org/CVERecord?id=CVE-2004-0828::REFERENCE:CVE-2004-2070:DESCRIPTION:Service on Windows does not drop privileges before using view file option, allowing code execution.:LINK:https://www.cve.org/CVERecord?id=CVE-2004-2070::",,,::TAXONOMY NAME:PLOVER:ENTRY NAME:Privilege Dropping / Lowering Errors::,,"::TYPE:Maintenance:NOTE:CWE-271, CWE-272, and CWE-250 are all closely related and possibly overlapping. CWE-271 is probably better suited as a category.::",
