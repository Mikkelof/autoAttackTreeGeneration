ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
55,Rainbow Table Password Cracking,Detailed,Draft,"An attacker gets access to the database table where hashes of passwords are stored. They then use a rainbow table of pre-computed hash chains to attempt to look up the original password. Once the original password corresponding to the hash is obtained, the attacker uses the original password to gain access to the system.",,Medium,Medium,::NATURE:ChildOf:CAPEC ID:49::NATURE:CanPrecede:CAPEC ID:151::NATURE:CanPrecede:CAPEC ID:560::NATURE:CanPrecede:CAPEC ID:561::NATURE:CanPrecede:CAPEC ID:600::NATURE:CanPrecede:CAPEC ID:653::,"::STEP:1:PHASE:Explore:DESCRIPTION:[Determine application's/system's password policy] Determine the password policies of the target application/system.:TECHNIQUE:Determine minimum and maximum allowed password lengths.:TECHNIQUE:Determine format of allowed passwords (whether they are required or allowed to contain numbers, special characters, etc.).:TECHNIQUE:Determine account lockout policy (a strict account lockout policy will prevent brute force attacks).::STEP:2:PHASE:Explore:DESCRIPTION:[Obtain password hashes] An attacker gets access to the database table storing hashes of passwords or potentially just discovers a hash of an individual password.:TECHNIQUE:Obtain copy of database table or flat file containing password hashes (by breaking access controls, using SQL Injection, etc.):TECHNIQUE:Obtain password hashes from platform-specific storage locations (e.g. Windows registry):TECHNIQUE:Sniff network packets containing password hashes.::STEP:3:PHASE:Exploit:DESCRIPTION:[Run rainbow table-based password cracking tool] An attacker finds or writes a password cracking tool that uses a previously computed rainbow table for the right hashing algorithm. It helps if the attacker knows what hashing algorithm was used by the password system.:TECHNIQUE:Run rainbow table-based password cracking tool such as Ophcrack or RainbowCrack. Reduction function must depend on application's/system's password policy.::","::Hash of the original password is available to the attacker. For a better chance of success, an attacker should have more than one hash of the original password, and ideally the whole table.::Salt was not used to create the hash of the original password. Otherwise the rainbow tables have to be re-computed, which is very expensive and will make the attack effectively infeasible (especially if salt was added in iterations).::The system uses one factor password based authentication.::",::SKILL:A variety of password cracking tools are available that can leverage a rainbow table. The more difficult part is to obtain the password hash(es) in the first place.:LEVEL:Low::,::Rainbow table of password hash chains with the right algorithm used. A password cracking tool that leverages this rainbow table will also be required. Hash(es) of the password is required.::,::This is a completely offline attack that an attacker can perform at their leisure after the password hashes are obtained.::,::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::,"::Use salt when computing password hashes. That is, concatenate the salt (random bits) with the original password prior to hashing it.::","::BusyBox 1.1.1 does not use a salt when generating passwords, which makes it easier for local users to guess passwords from a stolen password file using techniques such as rainbow tables. See also: CVE-2006-1058::",::261::521::262::263::654::916::308::309::,TAXONOMY NAME:ATTACK:ENTRY ID:1110.002:ENTRY NAME:Brute Force:Password Cracking::,
