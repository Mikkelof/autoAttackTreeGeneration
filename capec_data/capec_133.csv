ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
133,Try All Common Switches,Standard,Draft,"An attacker attempts to invoke all common switches and options in the target application for the purpose of discovering weaknesses in the target. For example, in some applications, adding a --debug switch causes debugging information to be displayed, which can sometimes reveal sensitive processing or configuration information to an attacker. This attack differs from other forms of API abuse in that the attacker is indiscriminately attempting to invoke options in the hope that one of them will work rather than specifically targeting a known option. Nonetheless, even if the attacker is familiar with the published options of a targeted application this attack method may still be fruitful as it might discover unpublicized functionality.",,,Medium,::NATURE:ChildOf:CAPEC ID:113::,"::STEP:1:PHASE:Explore:DESCRIPTION:[Identify application] Discover an application of interest by exploring service registry listings or by connecting on a known port or some similar means.:TECHNIQUE:Search via internet for known, published applications that allow option switches.:TECHNIQUE:Use automated tools to scan known ports to identify applications that might be accessible::STEP:2:PHASE:Explore:DESCRIPTION:[Authenticate to application] Authenticate to the application, if required, in order to explore it.:TECHNIQUE:Use published credentials to access system.:TECHNIQUE:Find unpublished credentails to access service.:TECHNIQUE:Use other attack pattern or weakness to bypass authentication.::STEP:3:PHASE:Experiment:DESCRIPTION:[Try all common switches] Using manual or automated means, attempt to run the application with many different known common switches. Observe the output to see if any switches seemed to put the application in a non production mode that might give more information.:TECHNIQUE:Manually execute the application with switches such as --debug, --test, --development, --verbose, etc.:TECHNIQUE:Use automated tools to run the application with common switches and observe the output::STEP:4:PHASE:Exploit:DESCRIPTION:[Use sensitive processing or configuration information] Once extra information is observed from an application through the use of a common switch, this information is used to aid other attacks on the application:TECHNIQUE:Using application information, formulate an attack on the application::",::The attacker must be able to control the options or switches sent to the target.::,,::None: No specialized resources are required to execute this type of attack. The only requirement is the ability to send requests to the target.::,,,::Design: Minimize switch and option functionality to only that necessary for correct function of the command.::Implementation: Remove all debug and testing options from production code.::,,::912::,,,
