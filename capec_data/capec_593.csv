ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
593,Session Hijacking,Standard,Stable,This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The adversary is able to steal or manipulate an active session and use it to gain unathorized access to the application.,,High,Very High,::NATURE:ChildOf:CAPEC ID:21::NATURE:ParentOf:CAPEC ID:60::NATURE:ParentOf:CAPEC ID:61::NATURE:ParentOf:CAPEC ID:102::NATURE:ParentOf:CAPEC ID:107::NATURE:CanFollow:CAPEC ID:33::NATURE:CanFollow:CAPEC ID:34::NATURE:CanFollow:CAPEC ID:105::NATURE:CanFollow:CAPEC ID:273::,"::STEP:1:PHASE:Explore:DESCRIPTION:[Discover Existing Session Token] Through varrying means, an adversary will discover and store an existing session token for some other authenticated user session.::STEP:2:PHASE:Experiment:DESCRIPTION:[Insert Found Session Token] The attacker attempts to insert a found session token into communication with the targeted application to confirm viability for exploitation.::STEP:3:PHASE:Exploit:DESCRIPTION:[Session Token Exploitation] The attacker leverages the captured session token to interact with the targeted application in a malicious fashion, impersonating the victim.::",::An application that leverages sessions to perform authentication.::,::SKILL:Exploiting a poorly protected identity token is a well understood attack with many helpful resources available.:LEVEL:Low::,::The adversary must have the ability to communicate with the application over the network.::,,::SCOPE:Confidentiality:SCOPE:Integrity:SCOPE:Availability:TECHNICAL IMPACT:Gain Privileges:NOTE:A successful attack can enable an adversary to gain unauthorized access to an application.::,"::Properly encrypt and sign identity tokens in transit, and use industry standard session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf. Utilize a session timeout for all sessions. If the user does not explicitly logout, terminate their session after this period of inactivity. If the user logs back in then a new session key should be generated.::",,::287::,TAXONOMY NAME:ATTACK:ENTRY ID:1185:ENTRY NAME:Browser Session Hijacking::::TAXONOMY NAME:ATTACK:ENTRY ID:1550.001:ENTRY NAME:Use Alternate Authentication Material:Application Access Token::::TAXONOMY NAME:ATTACK:ENTRY ID:1563:ENTRY NAME:Remote Service Session Hijacking::::TAXONOMY NAME:OWASP Attacks:ENTRY NAME:Session hijacking attack::,
