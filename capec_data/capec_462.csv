ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
462,Cross-Domain Search Timing,Detailed,Draft,"An attacker initiates cross domain HTTP / GET requests and times the server responses. The timing of these responses may leak important information on what is happening on the server. Browser's same origin policy prevents the attacker from directly reading the server responses (in the absence of any other weaknesses), but does not prevent the attacker from timing the responses to requests that the attacker issued cross domain.",,,Medium,::NATURE:ChildOf:CAPEC ID:54::,"::STEP:1:PHASE:Explore:DESCRIPTION:[Determine service to send cross domain requests to] The adversary first determines which service they will be sending the requests to::STEP:2:PHASE:Experiment:DESCRIPTION:[Send and time various cross domain requests] Adversaries will send a variety of cross domain requests to the target, timing the time it takes for the target to respond. Although they won't be able to read the response, the adversary can use the time to infer information about what the service did upon receiving the request.:TECHNIQUE:Using a GET request, leverage the img tag in conjunction with onload() / onerror() javascript events to time a response:TECHNIQUE:Using a POST request, leverage the iframe element and use the onload() event to time a response::STEP:3:PHASE:Exploit:DESCRIPTION:[Infer information from the response time] After obtaining reponse times to various requests, the adversary will compare these times and infer potentially sensitive information. An example of this could be asking a service to retrieve information and random usernames. If one request took longer to process, it is likely that a user with that username exists, which could be useful knowledge to an adversary.:TECHNIQUE:Compare timing of different requests to infer potentially sensitive information about a target service::",::Ability to issue GET / POST requests cross domainJava Script is enabled in the victim's browserThe victim has an active session with the site from which the attacker would like to receive informationThe victim's site does not protect search functionality with cross site request forgery (CSRF) protection::,::SKILL:Some knowledge of Java Script:LEVEL:Low::,::Ability to issue GET / POST requests cross domain::,,::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data::,::Design: The victim's site could protect all potentially sensitive functionality (e.g. search functions) with cross site request forgery (CSRF) protection and not perform any work on behalf of forged requests::Design: The browser's security model could be fixed to not leak timing information for cross domain requests::,,::385::352::208::,,
