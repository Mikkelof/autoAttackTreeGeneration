ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
542,Targeted Malware,Standard,Draft,An adversary develops targeted malware that takes advantage of a known vulnerability in an organizational information technology environment. The malware crafted for these attacks is based specifically on information gathered about the technology environment. Successfully executing the malware enables an adversary to achieve a wide variety of negative technical impacts.,,,,::NATURE:ChildOf:CAPEC ID:549::NATURE:ParentOf:CAPEC ID:550::NATURE:ParentOf:CAPEC ID:551::NATURE:ParentOf:CAPEC ID:552::NATURE:ParentOf:CAPEC ID:556::NATURE:ParentOf:CAPEC ID:558::NATURE:ParentOf:CAPEC ID:564::NATURE:ParentOf:CAPEC ID:579::NATURE:ParentOf:CAPEC ID:698::NATURE:CanFollow:CAPEC ID:475::NATURE:CanPrecede:CAPEC ID:662::,,,,,::Software being run on a system matches a file signature found in a malware database::A suspicious module is loaded that is not regularly loaded by a system::Software on a system is making calls to GetProcAddress() which is a commonly used function to implement dynamic API resolution::,,,,,TAXONOMY NAME:ATTACK:ENTRY ID:1587.001:ENTRY NAME:Develop Capabilities: Malware::::TAXONOMY NAME:ATTACK:ENTRY ID:1027:ENTRY NAME:Obfuscated Files or Information::,"TYPE:Other:NOTE:Adversaries often utilize obfuscation techniques when developing malware with the purpose of either avoiding detection or prevent the target from reverse engineering and understanding a captured malware sample. Some of these techniques include, but are not limited to, binary padding, software packing, stripping symbols and strings from a payload, and utilizing dynamic API resolution.::"
