ID,Name,Abstraction,Status,Description,Alternate Terms,Likelihood Of Attack,Typical Severity,Related Attack Patterns,Execution Flow,Prerequisites,Skills Required,Resources Required,Indicators,Consequences,Mitigations,Example Instances,Related Weaknesses,Taxonomy Mappings,Notes
83,XPath Injection,Detailed,Draft,"An attacker can craft special user-controllable input consisting of XPath expressions to inject the XML database and bypass authentication or glean information that they normally would not be able to. XPath Injection enables an attacker to talk directly to the XML database, thus bypassing the application completely. XPath Injection results from the failure of an application to properly sanitize input used as part of dynamic XPath expressions used to query an XML database.",,High,High,::NATURE:ChildOf:CAPEC ID:250::,"::STEP:1:PHASE:Explore:DESCRIPTION:[Survey the target] Using a browser or an automated tool, an adversary records all instances of user-controllable input used to contruct XPath queries.:TECHNIQUE:Use an automated tool to record all instances of user-controllable input used to contruct XPath queries.:TECHNIQUE:Use a browser to manually explore the website and analyze how the application processes inputs.::STEP:2:PHASE:Explore:DESCRIPTION:[Determine the tructure of queries] Using manual or automated means, test inputs found for XPath weaknesses.:TECHNIQUE:Use an automated tool automatically probe the inputs for XPath weaknesses.:TECHNIQUE:Manually probe the inputs using characters such as single quote (') that can cause XPath-releated errors, thus indicating an XPath weakness.::STEP:3:PHASE:Exploit:DESCRIPTION:[Inject content into XPath query] Craft malicious content containing XPath expressions that is not validated by the application and is executed as part of the XPath queries.:TECHNIQUE:Use the crafted input to execute unexpected queries that can disclose sensitive database information to the attacker.:TECHNIQUE:Use a combination of single quote (') and boolean expressions such as or 1=1 to manipulate XPath logic.:TECHNIQUE:Use XPath functions in the malicious content such as string-length, substring, or count to gain information about the XML document structure being used.::",::XPath queries used to retrieve information stored in XML documents::User-controllable input not properly sanitized before being used as part of XPath queries::,::SKILL:XPath Injection shares the same basic premises with SQL Injection. An attacker must have knowledge of XPath syntax and constructs in order to successfully leverage XPath Injection:LEVEL:Low::,::None: No specialized resources are required to execute this type of attack.::,::Too many exceptions generated by the application as a result of malformed XPath queries::,::SCOPE:Confidentiality:SCOPE:Access Control:SCOPE:Authorization:TECHNICAL IMPACT:Gain Privileges::SCOPE:Confidentiality:TECHNICAL IMPACT:Read Data::,"::Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XPath expression. Characters such as a single-quote(') or operators such as or (|), and (&) and such should be filtered if the application does not expect them in the context in which they appear. If such content cannot be filtered, it must at least be properly escaped to avoid them being interpreted as part of XPath expressions.::Use of parameterized XPath queries - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails.::Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application.::",::Consider an application that uses an XML database to authenticate its users. The application retrieves the user name and password from a request and forms an XPath expression to query the database. An attacker can successfully bypass authentication and login without valid credentials through XPath Injection. This can be achieved by injecting the query to the XML database with XPath syntax that causes the authentication check to fail. Improper validation of user-controllable input and use of a non-parameterized XPath expression enable the attacker to inject an XPath expression that causes authentication bypass.::,::91::74::20::707::,TAXONOMY NAME:WASC:ENTRY ID:39:ENTRY NAME:XPath Injection::::TAXONOMY NAME:OWASP Attacks:ENTRY NAME:Blind XPath Injection::::TAXONOMY NAME:OWASP Attacks:ENTRY NAME:XPATH Injection::,
